#!/usr/bin/env python3
import os.path
import sys
work_root=os.path.abspath(os.path.dirname(__file__))
lib_path=os.path.join(work_root,"lib")
sys.path.insert(0,lib_path)
from minium.native.wx_native.androidnative import WXAndroidNative
from minium.native.wx_native.iosnative import WXIOSNative
from minium.native.wx_native.idenative import IdeNative
from minium.native.qq_native.qandroidnative import QAndroidNative
from minium.native.qq_native.qiosnative import QiOSNative
OS_ANDROID="android"
OS_IOS="ios"
OS_IDE="ide"
OS_MAC="mac"
OS_WIN="win"
APP_WX="wx"
APP_QQ="qq"
APP={"wx_android":WXAndroidNative,"wx_ios":WXIOSNative,"qq_android":QAndroidNative,"qq_ios":QiOSNative,"ide":IdeNative,}
def get_native_driver(os_name,conf):
 if os_name.lower()not in[OS_ANDROID,OS_IDE,OS_IOS]:
  raise RuntimeError("the 'os_name' in your config file is not in predefine")
 if os_name.lower()!=OS_IDE and conf.get("app",None)not in[APP_WX,APP_QQ]:
  raise RuntimeError(f"the 'app': '{os_name}' in your config file is not in predefine, not support yet")
 if os_name.lower()==OS_IDE:
  return APP[os_name.lower()]({})
 else:
  return APP[conf.app.lower()+"_"+os_name.lower()](conf.device_desire)
# Created by pyminifier (https://github.com/liftoff/pyminifier)
